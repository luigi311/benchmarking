"""Initial

Revision ID: 56cf02361cc1
Revises: 
Create Date: 2025-05-21 06:50:31.935802

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '56cf02361cc1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benchmarks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('settings', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufacturers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cpus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gpus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturers.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('benchmark_id', sa.Integer(), nullable=False),
    sa.Column('gpu_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('cpu_id', sa.Integer(), nullable=False),
    sa.Column('run_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['benchmark_id'], ['benchmarks.id'], ),
    sa.ForeignKeyConstraint(['cpu_id'], ['cpus.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['gpu_id'], ['gpus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('results',
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('sample_time_ms', sa.Integer(), nullable=False),
    sa.Column('frame_time', sa.Float(), nullable=True),
    sa.Column('cpu_busy', sa.Float(), nullable=True),
    sa.Column('cpu_wait', sa.Float(), nullable=True),
    sa.Column('gpu_latency', sa.Float(), nullable=True),
    sa.Column('gpu_time', sa.Float(), nullable=True),
    sa.Column('gpu_busy', sa.Float(), nullable=True),
    sa.Column('gpu_wait', sa.Float(), nullable=True),
    sa.Column('display_latency', sa.Float(), nullable=True),
    sa.Column('gpu_power', sa.Float(), nullable=True),
    sa.Column('gpu_voltage', sa.Float(), nullable=True),
    sa.Column('gpu_frequency', sa.Float(), nullable=True),
    sa.Column('gpu_temperature', sa.Float(), nullable=True),
    sa.Column('gpu_utilization', sa.Float(), nullable=True),
    sa.Column('gpu_memory_frequency', sa.Float(), nullable=True),
    sa.Column('gpu_memory_size_used', sa.BigInteger(), nullable=True),
    sa.Column('gpu_fan_speed_0', sa.Integer(), nullable=True),
    sa.Column('gpu_fan_speed_1', sa.Integer(), nullable=True),
    sa.Column('gpu_fan_speed_2', sa.Integer(), nullable=True),
    sa.Column('gpu_fan_speed_3', sa.Integer(), nullable=True),
    sa.Column('cpu_utilization', sa.Float(), nullable=True),
    sa.Column('cpu_power', sa.Float(), nullable=True),
    sa.Column('cpu_temperature', sa.Float(), nullable=True),
    sa.Column('cpu_frequency', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], ),
    sa.PrimaryKeyConstraint('run_id', 'sample_time_ms')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('results')
    op.drop_table('runs')
    op.drop_table('gpus')
    op.drop_table('drivers')
    op.drop_table('cpus')
    op.drop_table('vendors')
    op.drop_table('manufacturers')
    op.drop_table('benchmarks')
    # ### end Alembic commands ###
